{"version":3,"sources":["components/Navbar/Navbar.js","components/Home/Banner.js","components/Home/Home.js","components/Analysis/Income.js","components/Analysis/Chart.js","components/Analysis/Analysis.js","store/actions/clientActions.js","store/actions/sessionActions.js","components/Clients/AddClient.js","components/Clients/Clients.js","components/Sessions/AddSession.js","components/Sessions/Sessions.js","components/Clients/ClientDetails.js","components/Sessions/SessionDetails.js","App.js","serviceWorker.js","store/reducers/clientReducer.js","store/reducers/sessionReducer.js","store/reducers/rootReducer.js","index.js","images/addClient.png","images/addsession.png","images/analyze.png","images/bannerImg3.jpg"],"names":["Navbar","react_default","a","createElement","className","react_router_dom","to","exact","activeClassName","Banner","src","addclientImg","alt","addsessionImg","analyzeImg","Component","Home","bannerImg2","Home_Banner","Income","calculation","_this$props","_this","props","_this$props$sessionLi","sessionList","_this$props$clientLis","clientList","totalIncome","forEach","session","client","name","price","duration","totalHours","_this$props$sessionLi2","Number","undefined","this","connect","state","sessions","clients","Chart","dayOfWeek","sundayIncome","mondayIncome","tuesdayIncome","wednesdayIncome","thursdayIncome","fridayIncome","saturdayIncome","chartData","labels","datasets","label","data","backgroundColor","dailyIncome","console","log","react_chartjs_2_es","options","layout","padding","left","right","up","bottom","title","display","text","fontSize","legend","position","scales","xAxes","scaleLabel","labelString","yAxes","ticks","beginAtZero","Analysis","resetAllButton","deleteAllClients","deleteAllSessions","Analysis_Income","Analysis_Chart","onClick","dispatch","getState","type","AddClient","id","handleChange","e","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","addClient","reset","clientErr","onSubmit","htmlFor","onChange","required","step","JSON","stringify","map","includes","Clients","handleClick","deleteClient","deleteAllClientsButton","_this2","Clients_AddClient","key","AddSession","newPrice","filter","addSession","objectSpread","Sessions","deleteSession","deleteAllSessionsButton","Sessions_AddSession","ClientDetails","SessionDetails","App","components_Navbar_Navbar","react_router","path","activeStyle","color","component","Boolean","window","location","hostname","match","initState","clientReducer","arguments","length","action","Math","random","concat","toConsumableArray","reverse","sessionReducer","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.ed631d8f.chunk.js","sourcesContent":["import React from 'react'\nimport {Link, NavLink} from 'react-router-dom'\n\nconst Navbar = () => {\n  return (\n    <nav className=\"navbar\">\n            <div className=\"container\">\n                <Link to=\"/\" className=\"navbar-logo text-black\">\n                  {/* <img className=\"profitsLogo\" src={ProfitsLogo} alt=\"\"/> */}\n                  Profit<span className=\"dollarSign\">$</span>\n                </Link>\n                <div className=\"nav-links float-right\">\n                  <NavLink className=\"mr-4\" to=\"/\" exact activeClassName=\"active-link\">Home</NavLink>\n                  <NavLink className=\"mx-4\" to=\"/analysis\" exact activeClassName=\"active-link\">Analysis</NavLink>\n                  <NavLink className=\"mx-4\" to=\"/sessions\" exact activeClassName=\"active-link\">Sessions</NavLink>\n                  <NavLink className=\"ml-4\" to=\"/clients\" exact activeClassName=\"active-link\">Clients</NavLink>\n                </div>\n            </div>\n        </nav>\n  )\n}\n\nexport default Navbar\n","import React, {Component} from 'react'\nimport {Link} from 'react-router-dom'\nimport addclientImg from '../../images/addClient.png'\nimport addsessionImg from '../../images/addsession.png'\nimport analyzeImg from '../../images/analyze.png'\n\n\nclass Banner extends Component{ \n\n  \n  render() {\n    return (\n      <div className=\"banner\">\n      <div className=\"bannerIntro\">\n        <h1 className=\"text-black bannerIntro1\">Easily track your weekly income with <span className=\"bannerProfits\">Profit<span className=\"dollarSign\">$</span></span>.</h1>\n        <h2 className=\"text-black bannerIntro2\">Visual diagrams and calculations will analyze where your profit is coming from.</h2>\n      </div>\n        {/* <h3 className=\"pt-5\">3 Easy Steps</h3> */}\n        <div className=\"container steps\">\n          <div className=\"row pt-5\">\n            <div className=\"col-12 col-md-3 step_1 mb-5 mb-md-0\">\n              <div>Step 1</div>\n              \n              <img className=\"addclientImg\" src={addclientImg} alt=\"\"/>\n              <div className=\"step-titles\">Add Clients</div> \n            </div>\n            <div className=\"col-12 col-md-3 step_2 my-5 my-md-0\">\n              <div>Step 2</div>\n              <img className=\"addsessionImg\" src={addsessionImg} alt=\"\"/>\n              <div className=\"step-titles\">Add Sessions</div>\n            </div>\n            <div className=\"col-12 col-md-3 step_3 my-5 my-md-0\">\n              <div>Step 3</div>\n              <img className=\"analyzeImg\" src={analyzeImg} alt=\"\"/>\n              <div className=\"step-titles\">Analyze Income</div>\n            </div>\n            <div className=\"col-12 col-md-3 mt-5\">\n              <Link to=\"/clients\"><button className=\"startNowBtn btn\">Start Now</button></Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Banner\n","import React, { Component } from 'react'\nimport Banner from './Banner'\nimport bannerImg2 from '../../images/bannerImg3.jpg'\n\nclass Home extends Component {\n  render() {\n    return (\n      <div className=\"home\">\n      <img className=\"bannerImg\" src={bannerImg2} alt=\"\"/>\n        <div className=\"container\">\n          <div className=\"row text-center\">\n            <div className=\"col-12\">             \n              <Banner/>\n            </div>       \n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Home\n","import React, {Component} from 'react'\nimport {connect} from 'react-redux'\n\nclass Income extends Component {\n        \n\n\n        calculation = () => {\n            const { sessionList = [], clientList = [] } = this.props;\n            let totalIncome = 0;\n            sessionList.forEach(session => {\n                clientList.forEach(client => {\n                    if (client.name === session.name) {\n                        totalIncome += client.price * session.duration;\n                    }\n                });\n            });\n            return totalIncome;\n        }\n        \n        totalHours = () => {\n            const { sessionList = []} = this.props;\n            let totalHours = 0;\n            sessionList.forEach(session => {\n                let duration = session.duration;\n                totalHours = totalHours + (Number(duration));\n            })\n            \n\n            return totalHours;\n        }\n\n        render() {\n            \n           \n            const { sessionList } = this.props;\n            \n            if (sessionList !== undefined) {\n                const totalIncome = this.calculation();\n                const totalHours = this.totalHours();\n                return (\n                    <div className=\"mt-5 text-center\">\n                        <h2 className=\"mb-4\">Step 3 : Analyze</h2>\n                        <h3>Total Weekly Income: ${totalIncome}</h3>\n                        <h3>Total Hours in a Week: {totalHours}</h3>\n                    </div>\n                )\n            }\n            else {return <div className=\"mt-5 text-center\"><h2>Here is your current income: </h2>You are broke</div>}\n            \n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        sessionList: state.sessions.sessionList,\n        clientList: state.clients.clientList\n    }\n}\n\nexport default connect(mapStateToProps)(Income)\n    ","import React, { Component } from 'react'\nimport {Bar, Line, Pie} from 'react-chartjs-2'\nimport {connect} from 'react-redux'\n\n\nclass Chart extends Component {\n\n    dayOfWeek = () => {\n        \n        const {sessionList} = this.props;\n        let sundayIncome = 0;\n        let mondayIncome = 0;\n        let tuesdayIncome = 0;\n        let wednesdayIncome = 0;\n        let thursdayIncome = 0;\n        let fridayIncome = 0;\n        let saturdayIncome = 0;\n\n        sessionList.forEach(session => {\n        if (session.dayOfWeek === \"Sunday\") {\n            sundayIncome += session.price * session.duration;\n        } else if (session.dayOfWeek === \"Monday\") {\n            mondayIncome += session.price * session.duration;\n        } else if (session.dayOfWeek === \"Tuesday\") {\n            tuesdayIncome += session.price * session.duration;\n        } else if (session.dayOfWeek === \"Wednesday\") {\n            wednesdayIncome += session.price * session.duration;\n        } else if (session.dayOfWeek === \"Thursday\") {\n            thursdayIncome += session.price * session.duration;\n        } else if (session.dayOfWeek === \"Friday\") {\n            fridayIncome += session.price * session.duration;\n        } else {\n            saturdayIncome += session.price * session.duration;\n        }\n        });\n        return [\n        sundayIncome,\n        mondayIncome,\n        tuesdayIncome,\n        wednesdayIncome,\n        thursdayIncome,\n        fridayIncome,\n        saturdayIncome\n        ]\n        \n    }\n\n    state = {\n        chartData : {\n            labels: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n            datasets: [{\n                label: 'Income $',\n                data: this.dayOfWeek(),\n                \n                backgroundColor: [\n                    'rgba(255, 99, 132, 0.6)',\n                    'rgba(54, 162, 235, 0.6)',\n                    'rgba(255, 206, 86, 0.6)',\n                    'rgba(75, 192, 192, 0.6)',\n                    'rgba(153, 102, 255, 0.6)',\n                    'rgba(255, 159, 64, 0.6)',\n                    'rgba(255, 99, 132, 0.6)',\n                ]\n            }]\n        }\n    }\n\n    render() {\n        const dailyIncome = this.dayOfWeek();\n        console.log(dailyIncome)\n        return (\n            <div>\n            <Bar \n                data={this.state.chartData} \n                options={{\n                    layout: {\n                        padding: {\n                            left: 50,\n                            right: 50,\n                            up:50,\n                            bottom:50\n                        }\n                    },\n                    title: {\n                        display:true,\n                        text: 'Weekly Distribution',\n                        fontSize: 35\n                    },\n                    legend: {\n                        display:true,\n                        position: 'right'\n                    },\n                    scales: {\n                        xAxes: [{\n                            scaleLabel: {\n                                display: true,\n                                labelString: 'day of week'\n                            },\n                        }],\n                        yAxes: [{\n                            scaleLabel: {\n                                display: true,\n                                labelString: 'income $'\n                            },\n                            ticks: {\n                                beginAtZero: true\n                            }\n                        }]\n                    }\n                }}\n            />\n        </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        clientList : state.clients.clientList,\n        sessionList : state.sessions.sessionList\n    }\n}\n\nexport default connect(mapStateToProps)(Chart)","import React, { Component } from 'react'\nimport Income from './Income'\nimport Chart from './Chart'\nimport {connect} from 'react-redux'\nimport {deleteAllClients} from '../../store/actions/clientActions'\nimport {deleteAllSessions} from '../../store/actions/sessionActions'\nimport {Link} from 'react-router-dom'\n\nclass Analysis extends Component {\n\n  resetAllButton = () => {\n    this.props.deleteAllClients();\n    this.props.deleteAllSessions();\n\n  }\n\n  render() {\n    return (\n      <div className=\"container mt-5 \">\n        <Income/>\n        <hr className=\"mt-5\"/>\n        <Chart/>\n        <div className=\"text-center\">\n          <Link to=\"/clients\">\n            <button className=\"btn btn-warning my-4\" onClick={this.resetAllButton}>\n            reset and start over\n            </button>\n          </Link>\n        </div>\n        {/* <button className=\"btn btn-success\">Download PDF of Screen</button> */}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  console.log(state)\n  return {\n      sessionList : state.sessions.sessionList\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return{\n    deleteAllClients : () => dispatch(deleteAllClients()),\n    deleteAllSessions : () => dispatch(deleteAllSessions())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Analysis)\n","export const addClient = (client) => {\n    return(dispatch, getState) => {\n        // dispatch({type: 'ADD CLIENT', client}) }\n        const {\n            clients: { clientList },\n          } = getState();\n        console.log('state: ' + JSON.stringify(getState())); \n        // let clientList = getState().clientList; \n        console.log('clientList: ' + clientList); \n        if (clientList && clientList.map( client => { \n            return client.name;\n        }).includes(client.name)) \n            { return ( dispatch({type: 'ADD CLIENT ERROR'}) ) }\n        else { dispatch({type: 'ADD CLIENT', client}) }   \n    }\n}\n\nexport const deleteClient = (id) => {\n    return(dispatch, getState) => {\n        dispatch({type: 'DELETE CLIENT', id})\n    }\n}\n\nexport const deleteAllClients = () => {\n    return(dispatch, getState) => {\n        dispatch({type: 'DELETE ALL CLIENTS'})\n    }\n}","export const addSession = (session) => {\n    return(dispatch, getState) => {\n        dispatch({type: 'ADD SESSION', session})\n    }\n}\n\nexport const deleteSession = (id) => {\n    return (dispatch, getState) => {\n        dispatch ({type: 'DELETE SESSION', id})\n    }\n}\n\nexport const deleteAllSessions = () => {\n    return (dispatch, getState) => {\n        dispatch ({type: 'DELETE ALL SESSIONS'})\n    }\n}","import React, { Component } from 'react'\nimport {connect} from 'react-redux'\nimport {addClient} from '../../store/actions/clientActions'\nimport {Link} from 'react-router-dom'\n\n\nclass AddClient extends Component {\n\n  state = {\n    id: null,\n    name: null,\n    price: null,\n  }\n\n  handleChange = (e) => {\n      //we do it this way because we have multiple inputs\n      this.setState({\n          [e.target.id] : e.target.value\n      })\n  } \n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    // use .props to submit and send the new client to the parent as a prop\n    // this.props sends the props to the parent. in this case we send to addClient, and what we send is the updated this.state param.\n    this.props.addClient(this.state);\n    e.target.reset();\n    // this.setState({\n    //   id: null,\n    //   name: null,\n    //   price: null,\n    // })\n  }\n\n  render() {\n    const {clientErr} = this.props;\n    console.log(clientErr + \"do you see this??\")\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit} className=\"mt-5\">\n            <h2>Step 1 : Add a New Client</h2>\n            <label htmlFor=\"name\">Client First and Last Name: </label>\n            <input type=\"text\" id=\"name\" onChange={this.handleChange} required/><br/>\n            <label htmlFor=\"price\">Client Price: </label>\n            <input type=\"number\" step=\"0.5\" id=\"price\" onChange={this.handleChange} required/> <br/>\n            {clientErr ? (<p className=\"py-3 text-danger\">{clientErr}</p>):(null)}\n            <button className=\"btn btn-primary mt-3\">Add Client</button>\n            <br/>\n            <Link to=\"/sessions\"><button className=\"btn btn-secondary mt-3\">Step 2: Add Sessions</button></Link>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return{\n    clientErr : state.clients.clientErr\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addClient: (client) => dispatch(addClient(client))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddClient)\n","import React, { Component } from 'react'\nimport AddClient from './AddClient'\nimport {connect} from 'react-redux'\nimport {deleteClient, deleteAllClients} from '../../store/actions/clientActions'\nimport {deleteAllSessions} from '../../store/actions/sessionActions'\n\nclass Clients extends Component {\n\n  handleClick = (id) => {\n    this.props.deleteClient(id)\n  }\n\n  deleteAllClientsButton = () => {\n    this.props.deleteAllClients();\n    this.props.deleteAllSessions();\n  } \n\n  render() {\n    const {clientList} = this.props\n    return (\n      <div className=\"clients container mt-5 text-center\">\n              <AddClient/>\n        <h2 className=\"mt-5\">Here Are Your List of Clients...</h2>\n        <button className=\"btn btn-danger text-center my-2\" onClick={this.deleteAllClientsButton}>delete all</button> \n        <div className=\"text-center\">*deleting all clients will reset sessions and analysis*</div>\n        <hr/>\n        {clientList && clientList.map(client => {\n          return(\n            <div className=\"my-2\" key={client.id}>\n              <div>\n                <span className=\"client-name\">Client Name: {client.name}</span> | Client Price: {client.price}\n                <button className=\"btn btn-warning ml-2\" onClick={() => {this.handleClick(client.id)}}>Delete</button>\n              </div>      \n            </div>\n            \n          )\n        })}\n\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    clientList : state.clients.clientList,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return{\n    deleteClient : (id) => dispatch(deleteClient(id)), \n    deleteAllClients : () => dispatch(deleteAllClients()),\n    deleteAllSessions : () => dispatch(deleteAllSessions())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Clients)\n","import React, { Component } from 'react'\nimport {connect} from 'react-redux'\nimport {addSession} from '../../store/actions/sessionActions'\nimport {Link} from 'react-router-dom'\n\n\nclass AddSession extends Component {\n  state = {\n    id: null, \n    name: null, \n    duration: null, \n    dayOfWeek: null,\n    price: null\n  }\n\n  handleChange = (e) => {\n    //we do it this way because we have multiple inputs\n    this.setState({\n        // [name] is now 'whatever was chosen'\n        [e.target.id] : e.target.value,      \n    })\n   console.log([e.target.id]); \n  } \n\n  \n\n  handleSubmit = (e) => {\n    e.preventDefault();\n   \n      let newPrice = 0;\n      this.props.clientList.filter(client => {\n        if (client.name === this.state.name) \n        {newPrice = client.price}\n        this.setState({\n          price : newPrice\n        }, () => {\n           console.log(\"price = \" + this.state.price, 'newPrice = ' + newPrice)\n        });\n      })\n    \n    this.props.addSession({ ...this.state, price: newPrice });\n    e.target.reset();\n  }   \n  \n  render() {\n    const {clientList} = this.props\n    return(\n      <div className=\"mt-5\">\n          <h2>Step 2 : Add a Session</h2>\n          <form onSubmit={this.handleSubmit}>\n              <label htmlFor=\"name\">Client Name: </label>\n              <select onChange={(e) => this.handleChange(e)} id=\"name\" required>\n                  <option value=\"\"></option>\n                  {clientList.map(client => \n                      <option key={client.id} value={client.name.value}>\n                          {client.name}\n                      </option>\n                  )}\n              </select>\n              <br/>\n              <label htmlFor=\"dayOfWeek\">Day of Week: </label>\n              <select onChange={(e) => this.handleChange(e)} id=\"dayOfWeek\" required>\n                    <option value=\"\"></option>\n                    <option value=\"Sunday\">Sunday</option>\n                    <option value=\"Monday\">Monday</option>\n                    <option value=\"Tuesday\">Tuesday</option>\n                    <option value=\"Wednesday\">Wednesday</option>\n                    <option value=\"Thursday\">Thursday</option>\n                    <option value=\"Friday\">Friday</option>\n                    <option value=\"Saturday\">Saturday</option>\n              </select>\n              <br/>\n              <label htmlFor=\"duration\">Session Duration (in hours): </label>\n              <input type=\"number\" step=\"0.5\" id=\"duration\" onChange={this.handleChange} required/><br/>\n              <button className=\"btn btn-primary mt-3\">Add Session</button> \n              <br/>\n              <Link to=\"/analysis\"><button className=\"btn btn-secondary mt-3\">Step 3: Analyze Income</button></Link>\n          </form>\n      </div>\n    )\n  }\n}\n\nconst mapStatetoProps = (state) => {\n  console.log(state)\n  return {\n    clientList: state.clients.clientList\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addSession: (session) => dispatch(addSession(session))\n  }\n}\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(AddSession)\n","import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport AddSession from './AddSession'\nimport {deleteSession, deleteAllSessions} from '../../store/actions/sessionActions'\n\nclass Sessions extends Component {\n\n  handleClick = (id) => {\n    this.props.deleteSession(id)\n  }\n\n  deleteAllSessionsButton = () => {\n    this.props.deleteAllSessions();\n  }\n\n  render() {\n    const {sessionList, clientList} = this.props\n    return (\n      <div className=\"sessions mt-5 text-center\">\n      <AddSession/>\n        <h2 className=\"mt-5\">Here are a list of your existing Sessions...</h2>\n        <button className=\"btn btn-danger text-center my-2\" onClick={this.deleteAllSessionsButton}>delete all</button>\n        <div className=\"text-center\">*deleting all sessions will reset analysis*</div>\n        <hr/>\n        {sessionList && sessionList.map(session => {\n          return(\n            <div key={session.id}>\n              <ul>\n                <li>Client Name: {session.name}</li>\n                <li>Session Duration: {session.duration} hour(s)</li>\n                <li>Session Day: {session.dayOfWeek}</li>\n                <li>Session Price: {session.price}</li>\n                <button className=\"btn btn-warning\" onClick={() => {this.handleClick(session.id)}} >Delete</button>\n\n              </ul>\n            </div>\n          )    \n        })}\n      </div>\n    )\n  }\n}\n\nconst mapStatetoProps = (state) => {\n  return{\n    sessionList : state.sessions.sessionList,\n    clientList : state.clients.clientList\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return{\n    deleteSession: (id) => dispatch(deleteSession(id)),\n    deleteAllSessions: () => dispatch(deleteAllSessions())\n  }\n}\n\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(Sessions)\n","import React from 'react'\n\nconst ClientDetails = () => {\n  return (\n    <div>\n      Hello from Client Details\n    </div>\n  )\n}\n\nexport default ClientDetails\n","import React from 'react'\n\nconst SessionDetails = () => {\n  return (\n    <div>\n      Hello from Session Details\n    </div>\n  )\n}\n\nexport default SessionDetails\n","import React, { Component } from 'react';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom'\nimport Navbar from './components/Navbar/Navbar'\nimport Home from './components/Home/Home'\nimport Analysis from './components/Analysis/Analysis'\nimport Clients from './components/Clients/Clients'\nimport Sessions from './components/Sessions/Sessions'\nimport ClientDetails from './components/Clients/ClientDetails'\nimport SessionDetails from './components/Sessions/SessionDetails'\n\n\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n        <Navbar/>\n          <Switch>\n            <Route exact path=\"/\" activeStyle={{ color: 'red' }} component={Home}/>\n            <Route path='/analysis' activeStyle={{ color: 'red' }} component={Analysis} />\n            <Route path='/sessions' activeStyle={{ color: 'red' }} component={Sessions}/>\n            <Route path='/clients' activeStyle={{ color: 'red' }} component={Clients}/>\n            <Route path='/client/:id' activeStyle={{ color: 'red' }} component={ClientDetails}/>\n            <Route path='/session/:id' activeStyle={{ color: 'red' }} component={SessionDetails}/>\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n    clientList: [],\n    clientErr: null\n}\n\nconst clientReducer = (state = initState, action) => {\n    switch (action.type) {\n        \n        case 'ADD CLIENT' : \n            action.client.id = Math.random();\n            console.log('new client added')\n            let clientList =  [...state.clientList, action.client];\n            clientList.reverse()\n\n            // clientList.sort((a, b) => a.name.localeCompare(b.name));\n            return {\n                clientList,\n            };\n\n        case 'ADD CLIENT ERROR' : \n            console.log('add client failed')\n            return {\n                ...state,\n                clientErr: 'A client with this exact name already exists, please try again.'\n            }\n        \n        case 'DELETE CLIENT' :\n            clientList = state.clientList.filter(client => \n                {return client.id !== action.id});\n            return {...state, clientList};\n\n        case 'DELETE ALL CLIENTS' :\n            console.log('we get here');\n            clientList = [];\n            return {clientList};\n\n        default : return state;\n    }\n}\n\nexport default clientReducer","const initState = {\n    sessionList: []\n}\n\nconst sessionReducer = (state = initState, action) => {\n    switch (action.type) {\n\n        case 'ADD SESSION' :\n            action.session.id = Math.random();\n            let sessionList = [...state.sessionList, action.session];\n            sessionList.reverse()\n            return{\n                sessionList\n            }\n            \n        case 'DELETE SESSION' :\n            sessionList = state.sessionList.filter(session => {\n                return session.id !== action.id;\n            })\n            return {...state, sessionList}\n\n        case 'DELETE ALL SESSIONS' :\n            console.log('we get here tooooo');\n            sessionList = [];\n            return {sessionList};\n        \n        default : return state;\n    }\n}\n\nexport default sessionReducer","import {combineReducers} from 'redux'\nimport clientReducer from './clientReducer'\nimport sessionReducer from './sessionReducer'\n\nconst rootReducer = combineReducers({\n\n    clients: clientReducer,\n    sessions: sessionReducer\n\n})\n\nexport default rootReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, applyMiddleware} from 'redux'\nimport {Provider} from 'react-redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport thunk from 'redux-thunk'\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nReactDOM.render( <Provider store={store}><App/></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/addClient.4cb8c8a5.png\";","module.exports = __webpack_public_path__ + \"static/media/addsession.d31bc5a3.png\";","module.exports = __webpack_public_path__ + \"static/media/analyze.7ec2e445.png\";","module.exports = __webpack_public_path__ + \"static/media/bannerImg3.cfd7b160.jpg\";"],"sourceRoot":""}